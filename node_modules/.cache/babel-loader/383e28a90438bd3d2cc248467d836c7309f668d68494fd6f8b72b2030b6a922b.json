{"ast":null,"code":"// 该文件专门用于创建整个应用的路由器\nimport VueRouter from 'vue-router';\n//引入组件\nimport About from '../pages/About';\nimport Home from '../pages/Home';\nimport News from '../pages/News';\nimport Message from '../pages/Message';\nimport Detail from '../pages/Detail';\n\n//创建并暴露一个路由器\nconst router = new VueRouter({\n  routes: [{\n    name: 'guanyu',\n    path: '/about',\n    component: About,\n    meta: {\n      isAuth: true,\n      title: '关于'\n    }\n  }, {\n    name: 'zhuye',\n    path: '/home',\n    component: Home,\n    meta: {\n      title: '主页'\n    },\n    children: [{\n      name: 'xinwen',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true,\n        title: '新闻'\n      }\n      /* beforeEnter: (to, from, next) => {\r\n      \tconsole.log('前置路由守卫',to,from)\r\n      \tif(to.meta.isAuth){ //判断是否需要鉴权\r\n      \t\tif(localStorage.getItem('school')==='atguigu'){\r\n      \t\t\tnext()\r\n      \t\t}else{\r\n      \t\t\talert('学校名不对，无权限查看！')\r\n      \t\t}\r\n      \t}else{\r\n      \t\tnext()\r\n      \t}\r\n      } */\n    }, {\n      name: 'xiaoxi',\n      path: 'message',\n      component: Message,\n      meta: {\n        isAuth: true,\n        title: '消息'\n      },\n      children: [{\n        name: 'xiangqing',\n        path: 'detail',\n        component: Detail,\n        meta: {\n          isAuth: true,\n          title: '详情'\n        },\n        //props的第一种写法，值为对象，该对象中的所有key-value都会以props的形式传给Detail组件。\n        // props:{a:1,b:'hello'}\n\n        //props的第二种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件。\n        // props:true\n\n        //props的第三种写法，值为函数\n        props($route) {\n          return {\n            id: $route.query.id,\n            title: $route.query.title,\n            a: 1,\n            b: 'hello'\n          };\n        }\n      }]\n    }]\n  }]\n});\n\n//全局前置路由守卫————初始化的时候被调用、每次路由切换之前被调用\n/* router.beforeEach((to,from,next)=>{\r\n\tconsole.log('前置路由守卫',to,from)\r\n\tif(to.meta.isAuth){ //判断是否需要鉴权\r\n\t\tif(localStorage.getItem('school')==='atguigu'){\r\n\t\t\tnext()\r\n\t\t}else{\r\n\t\t\talert('学校名不对，无权限查看！')\r\n\t\t}\r\n\t}else{\r\n\t\tnext()\r\n\t}\r\n}) */\n\n//全局后置路由守卫————初始化的时候被调用、每次路由切换之后被调用\nrouter.afterEach((to, from) => {\n  console.log('后置路由守卫', to, from);\n  document.title = to.meta.title || '硅谷系统';\n});\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","routes","name","path","component","meta","isAuth","title","children","props","$route","id","query","a","b","afterEach","to","from","console","log","document"],"sources":["D:/Vue_Index/vue_test/src/router/index.js"],"sourcesContent":["// 该文件专门用于创建整个应用的路由器\r\nimport VueRouter from 'vue-router'\r\n//引入组件\r\nimport About from '../pages/About'\r\nimport Home from '../pages/Home'\r\nimport News from '../pages/News'\r\nimport Message from '../pages/Message'\r\nimport Detail from '../pages/Detail'\r\n\r\n//创建并暴露一个路由器\r\nconst router =  new VueRouter({\r\n\troutes:[\r\n\t\t{\r\n\t\t\tname:'guanyu',\r\n\t\t\tpath:'/about',\r\n\t\t\tcomponent:About,\r\n\t\t\tmeta:{isAuth:true,title:'关于'}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname:'zhuye',\r\n\t\t\tpath:'/home',\r\n\t\t\tcomponent:Home,\r\n\t\t\tmeta:{title:'主页'},\r\n\t\t\tchildren:[\r\n\t\t\t\t{\r\n\t\t\t\t\tname:'xinwen',\r\n\t\t\t\t\tpath:'news',\r\n\t\t\t\t\tcomponent:News,\r\n\t\t\t\t\tmeta:{isAuth:true,title:'新闻'},\r\n\t\t\t\t\t/* beforeEnter: (to, from, next) => {\r\n\t\t\t\t\t\tconsole.log('前置路由守卫',to,from)\r\n\t\t\t\t\t\tif(to.meta.isAuth){ //判断是否需要鉴权\r\n\t\t\t\t\t\t\tif(localStorage.getItem('school')==='atguigu'){\r\n\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\talert('学校名不对，无权限查看！')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} */\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname:'xiaoxi',\r\n\t\t\t\t\tpath:'message',\r\n\t\t\t\t\tcomponent:Message,\r\n\t\t\t\t\tmeta:{isAuth:true,title:'消息'},\r\n\t\t\t\t\tchildren:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'xiangqing',\r\n\t\t\t\t\t\t\tpath:'detail',\r\n\t\t\t\t\t\t\tcomponent:Detail,\r\n\t\t\t\t\t\t\tmeta:{isAuth:true,title:'详情'},\r\n\r\n\t\t\t\t\t\t\t//props的第一种写法，值为对象，该对象中的所有key-value都会以props的形式传给Detail组件。\r\n\t\t\t\t\t\t\t// props:{a:1,b:'hello'}\r\n\r\n\t\t\t\t\t\t\t//props的第二种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件。\r\n\t\t\t\t\t\t\t// props:true\r\n\r\n\t\t\t\t\t\t\t//props的第三种写法，值为函数\r\n\t\t\t\t\t\t\tprops($route){\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tid:$route.query.id,\r\n\t\t\t\t\t\t\t\t\ttitle:$route.query.title,\r\n\t\t\t\t\t\t\t\t\ta:1,\r\n\t\t\t\t\t\t\t\t\tb:'hello'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n})\r\n\r\n//全局前置路由守卫————初始化的时候被调用、每次路由切换之前被调用\r\n/* router.beforeEach((to,from,next)=>{\r\n\tconsole.log('前置路由守卫',to,from)\r\n\tif(to.meta.isAuth){ //判断是否需要鉴权\r\n\t\tif(localStorage.getItem('school')==='atguigu'){\r\n\t\t\tnext()\r\n\t\t}else{\r\n\t\t\talert('学校名不对，无权限查看！')\r\n\t\t}\r\n\t}else{\r\n\t\tnext()\r\n\t}\r\n}) */\r\n\r\n//全局后置路由守卫————初始化的时候被调用、每次路由切换之后被调用\r\nrouter.afterEach((to,from)=>{\r\n\tconsole.log('后置路由守卫',to,from)\r\n\tdocument.title = to.meta.title || '硅谷系统'\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;;AAEpC;AACA,MAAMC,MAAM,GAAI,IAAIN,SAAS,CAAC;EAC7BO,MAAM,EAAC,CACN;IACCC,IAAI,EAAC,QAAQ;IACbC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAACT,KAAK;IACfU,IAAI,EAAC;MAACC,MAAM,EAAC,IAAI;MAACC,KAAK,EAAC;IAAI;EAC7B,CAAC,EACD;IACCL,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,OAAO;IACZC,SAAS,EAACR,IAAI;IACdS,IAAI,EAAC;MAACE,KAAK,EAAC;IAAI,CAAC;IACjBC,QAAQ,EAAC,CACR;MACCN,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAC,MAAM;MACXC,SAAS,EAACP,IAAI;MACdQ,IAAI,EAAC;QAACC,MAAM,EAAC,IAAI;QAACC,KAAK,EAAC;MAAI;MAC5B;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC,EACD;MACCL,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAC,SAAS;MACdC,SAAS,EAACN,OAAO;MACjBO,IAAI,EAAC;QAACC,MAAM,EAAC,IAAI;QAACC,KAAK,EAAC;MAAI,CAAC;MAC7BC,QAAQ,EAAC,CACR;QACCN,IAAI,EAAC,WAAW;QAChBC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAACL,MAAM;QAChBM,IAAI,EAAC;UAACC,MAAM,EAAC,IAAI;UAACC,KAAK,EAAC;QAAI,CAAC;QAE7B;QACA;;QAEA;QACA;;QAEA;QACAE,KAAK,CAACC,MAAM,EAAC;UACZ,OAAO;YACNC,EAAE,EAACD,MAAM,CAACE,KAAK,CAACD,EAAE;YAClBJ,KAAK,EAACG,MAAM,CAACE,KAAK,CAACL,KAAK;YACxBM,CAAC,EAAC,CAAC;YACHC,CAAC,EAAC;UACH,CAAC;QACF;MAED,CAAC;IAEH,CAAC;EAEH,CAAC;AAEH,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAd,MAAM,CAACe,SAAS,CAAC,CAACC,EAAE,EAACC,IAAI,KAAG;EAC3BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACH,EAAE,EAACC,IAAI,CAAC;EAC7BG,QAAQ,CAACb,KAAK,GAAGS,EAAE,CAACX,IAAI,CAACE,KAAK,IAAI,MAAM;AACzC,CAAC,CAAC;AAEF,eAAeP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}