{"ast":null,"code":"//该文件专门用于创建整个应用的路由器\nimport VueRouter from 'vue-router';\n//引入组件\nimport About from '../pages/About';\nimport Home from '../pages/Home';\nimport News from '../pages/News';\nimport Message from '../pages/Message';\nimport Detail from '../pages/Detail.vue';\n\n//创建并暴露一个路由器\nconst router = new VueRouter({\n  mode: \"history\",\n  routes: [{\n    name: \"guanyu\",\n    path: \"/about\",\n    component: About,\n    meta: {\n      title: \"关于\"\n    },\n    meta: {\n      isAuth: true\n    }\n  }, {\n    name: \"zhuye\",\n    path: \"/home\",\n    component: Home,\n    meta: {\n      title: \"主页\"\n    },\n    children: [{\n      name: \"xinwen\",\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true,\n        title: \"新闻\"\n      }\n      /*      beforeEnter: (to, from, next) => {\r\n              if(to.meta.isAuth){\r\n                  if(localStorage.getItem(\"school\") === \"atguigu\"){\r\n                      next()\r\n                  }else{\r\n                      alert(\"权限不足，无法进入\")\r\n                  }\r\n              }else{\r\n                  next()\r\n              }\r\n          }*/\n    }, {\n      name: \"xiaoxi\",\n      path: 'message',\n      component: Message,\n      meta: {\n        isAuth: true,\n        title: \"消息\"\n      },\n      children: [{\n        name: \"xiangqing\",\n        path: \"detail\",\n        component: Detail,\n        meta: {\n          isAuth: true,\n          title: \"详情\"\n        },\n        //props的第一种写法，值为对象，该对象中所有的key-value都会以props的形式传给Detail组件\n        // props:{a:1,b:\"hello\"}\n\n        //props的第二种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件\n        // props:true\n\n        //props的第三种写法，值为函数\n        props($route) {\n          return {\n            id: $route.query.id,\n            title: $route.query.title\n          };\n        }\n      }]\n    }]\n  }]\n});\n\n/* //全局前置路由——初始化的时候被调用、每次路由切换之前被调用\r\nrouter.beforeEach(()=>{\r\nif(to.meta.isAuth){\r\n    if(localStorage.getItem(\"school\") === \"atguigu\"){\r\n        next()\r\n    }else{\r\n        alert(\"权限不足，无法进入\")\r\n    }\r\n}else{\r\n    next()\r\n}\r\n})\r\n */\n\n//全局后置路由——初始化的时候被调用、每次路由切换之后被调用\nrouter.afterEach(() => {\n  document.title = to.meta.title || \"硅谷系统\";\n});\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","mode","routes","name","path","component","meta","title","isAuth","children","props","$route","id","query","afterEach","document","to"],"sources":["D:/Vue_Index/vue_test/src/router/index.js"],"sourcesContent":["//该文件专门用于创建整个应用的路由器\r\nimport VueRouter from 'vue-router'\r\n//引入组件\r\nimport About from '../pages/About'\r\nimport Home from '../pages/Home'\r\nimport News from '../pages/News'\r\nimport Message from '../pages/Message'\r\nimport Detail from '../pages/Detail.vue'\r\n\r\n//创建并暴露一个路由器\r\nconst router = new VueRouter({\r\n    mode:\"history\",\r\n    routes:[\r\n        {\r\n            name:\"guanyu\",\r\n            path:\"/about\",\r\n            component:About,\r\n            meta:{title:\"关于\"},\r\n            meta:{isAuth:true}\r\n        },\r\n        {\r\n            name:\"zhuye\",\r\n            path:\"/home\",\r\n            component:Home,\r\n            meta:{title:\"主页\"},\r\n            children:[\r\n\t\t\t\t{\r\n                    name:\"xinwen\",\r\n\t\t\t\t\tpath:'news',\r\n\t\t\t\t\tcomponent:News,\r\n                    meta:{isAuth:true,title:\"新闻\"},\r\n/*      beforeEnter: (to, from, next) => {\r\n        if(to.meta.isAuth){\r\n            if(localStorage.getItem(\"school\") === \"atguigu\"){\r\n                next()\r\n            }else{\r\n                alert(\"权限不足，无法进入\")\r\n            }\r\n        }else{\r\n            next()\r\n        }\r\n    }*/\r\n},\r\n\t\t\t\t{\r\n                    name:\"xiaoxi\",\r\n\t\t\t\t\tpath:'message',\r\n\t\t\t\t\tcomponent:Message,\r\n                    meta:{isAuth:true,title:\"消息\"},\r\n                    children:[\r\n                        {\r\n                            name:\"xiangqing\",\r\n                            path:\"detail\",\r\n                            component:Detail,\r\n                            meta:{isAuth:true,title:\"详情\"},\r\n                            //props的第一种写法，值为对象，该对象中所有的key-value都会以props的形式传给Detail组件\r\n                            // props:{a:1,b:\"hello\"}\r\n\r\n                            //props的第二种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件\r\n                            // props:true\r\n\r\n                            //props的第三种写法，值为函数\r\n                            props($route){\r\n                                return{\r\n                                    id:$route.query.id,\r\n                                    title:$route.query.title,\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n\t\t\t\t}\r\n\t\t\t]\r\n        }\r\n    ]\r\n})\r\n\r\n/* //全局前置路由——初始化的时候被调用、每次路由切换之前被调用\r\nrouter.beforeEach(()=>{\r\nif(to.meta.isAuth){\r\n    if(localStorage.getItem(\"school\") === \"atguigu\"){\r\n        next()\r\n    }else{\r\n        alert(\"权限不足，无法进入\")\r\n    }\r\n}else{\r\n    next()\r\n}\r\n})\r\n */\r\n\r\n//全局后置路由——初始化的时候被调用、每次路由切换之后被调用\r\nrouter.afterEach(()=>{\r\n    document.title = to.meta.title || \"硅谷系统\"\r\n})\r\n\r\nexport default router"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA,MAAMC,MAAM,GAAG,IAAIN,SAAS,CAAC;EACzBO,IAAI,EAAC,SAAS;EACdC,MAAM,EAAC,CACH;IACIC,IAAI,EAAC,QAAQ;IACbC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAACV,KAAK;IACfW,IAAI,EAAC;MAACC,KAAK,EAAC;IAAI,CAAC;IACjBD,IAAI,EAAC;MAACE,MAAM,EAAC;IAAI;EACrB,CAAC,EACD;IACIL,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,OAAO;IACZC,SAAS,EAACT,IAAI;IACdU,IAAI,EAAC;MAACC,KAAK,EAAC;IAAI,CAAC;IACjBE,QAAQ,EAAC,CACjB;MACgBN,IAAI,EAAC,QAAQ;MAC5BC,IAAI,EAAC,MAAM;MACXC,SAAS,EAACR,IAAI;MACCS,IAAI,EAAC;QAACE,MAAM,EAAC,IAAI;QAACD,KAAK,EAAC;MAAI;MAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,CAAC,EACG;MACgBJ,IAAI,EAAC,QAAQ;MAC5BC,IAAI,EAAC,SAAS;MACdC,SAAS,EAACP,OAAO;MACFQ,IAAI,EAAC;QAACE,MAAM,EAAC,IAAI;QAACD,KAAK,EAAC;MAAI,CAAC;MAC7BE,QAAQ,EAAC,CACL;QACIN,IAAI,EAAC,WAAW;QAChBC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAACN,MAAM;QAChBO,IAAI,EAAC;UAACE,MAAM,EAAC,IAAI;UAACD,KAAK,EAAC;QAAI,CAAC;QAC7B;QACA;;QAEA;QACA;;QAEA;QACAG,KAAK,CAACC,MAAM,EAAC;UACT,OAAM;YACFC,EAAE,EAACD,MAAM,CAACE,KAAK,CAACD,EAAE;YAClBL,KAAK,EAACI,MAAM,CAACE,KAAK,CAACN;UACvB,CAAC;QACL;MACJ,CAAC;IAErB,CAAC;EAEG,CAAC;AAET,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAP,MAAM,CAACc,SAAS,CAAC,MAAI;EACjBC,QAAQ,CAACR,KAAK,GAAGS,EAAE,CAACV,IAAI,CAACC,KAAK,IAAI,MAAM;AAC5C,CAAC,CAAC;AAEF,eAAeP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}